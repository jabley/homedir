#! /bin/bash

# Recursively find and fetch git repos. Merges master if that's the current branch.
# Requires (GNU) parallel to run

CUR_DIR=$(pwd);

function fetch() {
   pushd "$(dirname "$CUR_DIR/$1")" > /dev/null || return
   # if there are no commits in this directory, then bail early
   if [ "$(git rev-list -n 1 --all | wc -l)" -eq 0 ] ; then
      return
   fi
   git fetch --prune || echo "Unable to fetch from $(git remote -v)"
   if [ "$(git rev-parse --abbrev-ref HEAD)" = "main" ] && [ "$(git remote | wc -l)" -ne 0 ] ; then
      git merge 1> /dev/null || echo "$1"
   elif [ "$(git rev-parse --abbrev-ref HEAD)" = "master" ] && [ "$(git remote | wc -l)" -ne 0 ] ; then
      git merge 1> /dev/null || echo "$1"
   fi
}

export -f fetch

find "$CUR_DIR" -name .git -type d | parallel -j 3 -a - fetch

date +%Y-%m-%dT%H:%M:%S%z
